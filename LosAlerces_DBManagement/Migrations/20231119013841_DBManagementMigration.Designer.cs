// <auto-generated />
using System;
using LosAlerces_DBManagement.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LosAlerces_DBManagement.Migrations
{
    [DbContext(typeof(LosAlercesDbContext))]
    [Migration("20231119013841_DBManagementMigration")]
    partial class DBManagementMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Cliente", b =>
                {
                    b.Property<int>("ID_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cliente"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_Cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Contactos", b =>
                {
                    b.Property<int>("ID_Contactos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Contactos"), 1L, 1);

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Contactos");

                    b.HasIndex("ID_Cliente");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Cotizacion", b =>
                {
                    b.Property<int>("ID_Cotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cotizacion"), 1L, 1);

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuotationDate")
                        .HasColumnType("DATE");

                    b.Property<string>("quantityofproduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Cotizacion");

                    b.HasIndex("ID_Cliente");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Personal", b =>
                {
                    b.Property<int>("ID_Personal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Personal"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("profession")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("salary")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("ID_Personal");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.PersonalCotizacion", b =>
                {
                    b.Property<int>("ID_Cotizacion")
                        .HasColumnType("int");

                    b.Property<int>("ID_Personal")
                        .HasColumnType("int");

                    b.Property<int>("PersonalID_Personal")
                        .HasColumnType("int");

                    b.HasKey("ID_Cotizacion", "ID_Personal");

                    b.HasIndex("PersonalID_Personal");

                    b.ToTable("PersonalCotizacion");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.ProductoCotizacion", b =>
                {
                    b.Property<int>("ID_Cotizacion")
                        .HasColumnType("int");

                    b.Property<int>("ID_Producto")
                        .HasColumnType("int");

                    b.Property<int>("ProductoID_Productos")
                        .HasColumnType("int");

                    b.HasKey("ID_Cotizacion", "ID_Producto");

                    b.HasIndex("ProductoID_Productos");

                    b.ToTable("ProductosCotizacion");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Productos", b =>
                {
                    b.Property<int>("ID_Productos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Productos"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("price")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("ID_Productos");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Contactos", b =>
                {
                    b.HasOne("LosAlerces_DBManagement.Entities.Cliente", "Cliente")
                        .WithMany("Contactos")
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Cotizacion", b =>
                {
                    b.HasOne("LosAlerces_DBManagement.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.PersonalCotizacion", b =>
                {
                    b.HasOne("LosAlerces_DBManagement.Entities.Cotizacion", "Cotizacion")
                        .WithMany("PersonalCotizacion")
                        .HasForeignKey("ID_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LosAlerces_DBManagement.Entities.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalID_Personal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.ProductoCotizacion", b =>
                {
                    b.HasOne("LosAlerces_DBManagement.Entities.Cotizacion", "Cotizacion")
                        .WithMany("ProductosCotizacion")
                        .HasForeignKey("ID_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LosAlerces_DBManagement.Entities.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Cliente", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("LosAlerces_DBManagement.Entities.Cotizacion", b =>
                {
                    b.Navigation("PersonalCotizacion");

                    b.Navigation("ProductosCotizacion");
                });
#pragma warning restore 612, 618
        }
    }
}
